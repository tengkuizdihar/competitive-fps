# NOTE: the `cd` command in each build stage is not necessary if your
# project.godot is at the repo root

stages:
  - export

variables:
  EXPORT_NAME: compegodot

linux-docker:
  image: barichello/godot-ci:3.4.2
  stage: export
  script:
    - mkdir -v -p build/linux
    - cd $EXPORT_NAME
    - godot -v --export "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/linux


# Usage of cachix to speed up the build time
# For those who have the keys, use `nix-store -qR --include-outputs $(nix-store -qd $(nix-build)) | grep -v '\.drv$' | cachix push publicagainmisterbin` to push all of the dependencies upstream.
# Should be done everytime you're changing nix files.
linux-nix:
  image: nixos/nix:2.3.16
  stage: export
  script:
    - nix-env -iA cachix -f https://cachix.org/api/v1/install
    - cachix use publicagainmisterbin
    - cd compegodot
    - nix build -vvv

    # Copy out the result because it's behind a symbolic link
    # Artifacts path doesn't like symbolic link
    - cp -r result/share/competitive-fps/ .
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - compegodot/competitive-fps

windows:
  image: barichello/godot-ci:3.4.2
  stage: export
  script:
    - mkdir -v -p build/windows
    - cd $EXPORT_NAME
    - godot -v --export "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/windows

# TODO: Disable InferiorOS export for now because it's broken as of 3.4.
# mac:
#   stage: export
#   script:
#     - mkdir -v -p build/mac
#     - cd $EXPORT_NAME
#     - godot -v --export "Mac OSX" ../build/mac/$EXPORT_NAME.zip
#   artifacts:
#     name: $EXPORT_NAME-$CI_JOB_NAME
#     paths:
#       - build/mac

web:
  image: barichello/godot-ci:3.4.2
  stage: export
  script:
    - mkdir -v -p build/web
    - cd $EXPORT_NAME
    - godot -v --export "HTML5" ../build/web/index.html
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/web
